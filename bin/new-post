#!/usr/bin/env node

const inquirer = require("inquirer");
const { mkdirp } = require("mkdirp");
const { writeFile } = require("fs").promises;
const clipboardy = require("clipboardy");

// https://stackoverflow.com/a/53335889/1825390
const dateToISOLikeButLocal = () => {
  const date = new Date();
  const offsetMs = date.getTimezoneOffset() * 60 * 1000;
  const msLocal = date.getTime() - offsetMs;
  const dateLocal = new Date(msLocal);
  const iso = dateLocal.toISOString();
  const isoLocal = iso.slice(0, 19);
  return isoLocal;
};

// this template might be off by a day because toISOString is UTC
const template = (title, text = "") =>
  `
---
date: "${dateToISOLikeButLocal().slice(0, 10)}"
title: "${title}"
fact: "A cool fact from Wikipedia (run the \`fact\` command)"
fact_year: 1234
tags: []
# og_img: ./images/og.png
og_desc: "Blah Blah"
draft: true # remove to publish
---

${text}
`.trimStart();

const createPost = async () => {
  const cb = await clipboardy.read();
  let title, slug, text;
  if (cb.trim()[0] === "#") {
    // we've got markdown with a title! use it
    const lines = cb.split("\n");
    title = lines[0].slice(1).trim();
    text = lines.slice(1).join("\n").trim();
  }

  ({ title, slug } = await inquirer.prompt([
    { message: "What will the title be?", name: "title", default: title },
    {
      message: "What is the slug (and folder name)?",
      name: "slug",
      default: ({ title }) =>
        title.split("(")[0].trim().split(" ").join("-").toLowerCase(),
    },
  ]));

  await mkdirp(`./posts/${slug}/images`);
  await writeFile(`./posts/${slug}/index.md`, template(title, text));
};

createPost().catch((e) => console.log(`Err: ${e}`));
